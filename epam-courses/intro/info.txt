====== Linux Introduction ======

==== Предварительные курсы ====
Не требуются. Общая компьютерная грамотность.

==== Цели ====
quick introduction to linux/unix. 

==== Целевая аудитория ====
Q/A engineers, software developers с других платформ

==== Результаты ====  
навыки для навигации по файловой системе, управление процессами, владение vi/vim, базовое скриптование и работа в shell (bash), основы обработки текста, чтение встроенной документации, понимание основ архитектуры


==== Сроки ==== 
неделя (понедельник-пятница, занятие 1.5 часа - 2 академических часа по 45 минут)

5x2 = 10 академических часов

==== Структура курса ====
  *  5 а/ч - теория
  *  5 а/ч - практические вопросы
  *  3  задания на дом

После 5 занятия - тест на усвоение материала.

Критерии прохождения курса: сдать все (3) практические задания, ответить на 1-2 вопроса на понимание.


==== Программа занятий ====

=== 1. Вводная ===

== Теория. ==
 Многопользовательская и многозадачная система. Основные черты, подсистемы, интерфейс пользователя. Командная строка. Команды и параметры. Редактор vi/vim.

== Практика: ==
  * Login/logout, exit
  * Пользователь, его профиль, домашний каталог, who, last
  * Навигация по файловой системе: cd, ls (-a -l), pwd
  * Операции над файлами: cp, rm[dir], mv, mkdir.
  * путь к файлу, / разделитель каталогов, абсолютный и относительный
  * PAGER - less и more, просмотр файлов
  * file - определение типа файла
  * echo
 

== Дом. задание == 
  - vimtutor ru

=== 2. Командная строка ===
== Теория == 
 Shell. Команды и параметры. Перенаправление ввода/вывода. Скриптование. Обработка текста.
== Практика ==
  - cat как универсальный инструмент перенаправления (ввод текста, вывод текста, копирование текста), конвейер
  * head и tail для слежения за логами
  * grep для поиска в файлах и выводе команд
  * сохранение в файл вывода команд и конвейеров, tee
  * sort и uniq
  * wc и od
  * скрипт, его параметры
  * прерывание выполнения: Ctrl+C, Ctrl+Z, Ctrl+D
== Дом. задание == 
  - Посчитать количество пользователей в системе (/etc/passwd)
  - Найти слово root в /etc и вывести первых 5 результатов. Ошибки доступа сохранить в файл root_search.errs
  - Запустить режим слежения за файлом /var/log/auth.log c сохранением в отдельный файл. Открыть и закрыть новую ssh сессию (например ssh localhost)
  - Вывести все файлы из /tmp на экран, отсортировать в обратном порядке

=== 3. Файловая система. Права доступа ===
== Теория == 
Eдиная древовидная VFS, монтирование и /etc/fstab. Типы файлов. Основные каталоги. Owner-group-other. read-write-execute, разница между файлами и каталогами. Алгоритм проверки прав. 
== Практика ==
  * chmod, chown, chgrp. Мнемоническое и восьмеричное представление прав доступа. 
  * символические и жёсткие ссылки, ln/ln -s
  * устройства, с и b, /dev
  * точки монтирования и подключениe их. 
  * утилита find
  * dd
  * /dev/null, /dev/zero, /dev/urandom
  * df и du
== Дом. задание == 
  - Подсчитать количество символьных устройств в каталоге /dev
  - Вывести все имена блочных устройств, содержащие слог "ra" в имени
  - Создать файлы, размером 8mb: пустой, с "дыркой", заполненный случайными данными. Замерить скорость их копирования в /dev/null. Замерить их реальный размер на диске.
  - Определить самую большую файловую систему. Найти на ней все файлы >10mb. Вывести пять самых больших из них 

=== 4. Процессы === 
== Теория == 
Запуск, изоляция процессов. Межпроцессное взаимодействие. Управление с помощью сигналов. Job control. Условное выполнение
== Практика == 
  * ps, top, w
  * kill, killall
  * exec, nohup, /proc
  * seq, xargs, touch
  * BASH и редактирование командной строки: история, поиск, хоткеи
== Дом. задание ==
  - Создать tar.bz2 архив из произвольных данных (например /usr/share/doc/bash). Сделать утилиту поиска по имени файла в архиве, arc_grep tarname filename
  - Создать пустые файлы с именами от 0 до 777 (утилита seq), удалить все не-восьмеричные цифры (содержащие 8 и 9). Оставшимся файлам присвоить права доступа, совпадающие с именем. Подсчитать, сколько файлов недоступно на чтение

=== 5. Встроенная справка. Информация о системе ===
== Теория == 
Man и его разделы, внутреннее представление времени
== Практика ==
  * man, apropos (man -k)
  * --help (в GNU-системах)
  * info
  * /usr/share/doc
  * архивирование/разархивирование - tar, gzip, bzip2 и др

==== Дополнительные материалы ====
учебное пособие по ОСиС

