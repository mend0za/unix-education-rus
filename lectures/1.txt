
   Литература

   Лекция 1. Общие сведения об операционной системе UNIX

   Лекция 2. BASH.

   Лекция 3. Редактор SED и регулярные выражения.

   Лекция 4. Файловая система ОС UNIX.

   Лекция 5. Процессы.

   Лекция 6. Среда программирования и архитектура UNIX.

   Лекция 7. Подсистема управления процессами.

   Лекция 8. IPC.Сигналы.

   Лекция 9. IPC. Каналы и FIFO.

   Лекция 10. IPC. Сокеты.

   Литература.

    1. Робачевский А. <<Операционная система UNIX>>. BHV, 1999.
    2. Бах М. <<Архитектура операционной системы UNIX (The of the
       operating system by Maurice J. Bach) >>. [1]www.lib.ru.
    3. Соловьев А. <<Sed и awk>>. Учебное пособие.
    4. Богатырев А. <<Христоматия по программированию на Си в UNIX>>.
       [2]www.citforum.ru.
    5. Рабовер, Фридман . <<Мобильная операционная система>>. М., 1991.
    6. Керниган, Пайк. <<UNIX - универсальная среда программирования>>.
       М., 1992.
    7. <<Программирование на shell (Unix)>>.
    8. Rassel S. Sage. <<Приемы профессиональной работы в UNIX>>.
       [3]www.citforum.ru.
    9. [4]www.lib.ru о UNIX на русском языке.

                    Лекция 1. Общие сведения об ОС UNIX.

                                  История.

   1961. AT&T Bell Labs и MIT начали работу над Multics. Цель -
       многозадачная ОС, управление задач с разделением времени.

   Ken Thompson, Dennis Ritchie, Brian Kernighan (автор названия UNIX).

   1969. 1-я версия UNIX.

   1971. Версия для PDP-11 на языке B (интерпретируемый).

   1973. 4-я редакция. Ядро написано на Си.

   1975. 6-я редакция - первая редакция, доступная вне Bell Labs -

   целиком на Си. С 6-й редакции начинается ветка BSD

   UNIX.

   1973. 7-я редакция - командный интерпретатор Bourne Shell и компилятор
       Си от Кернигана/Ритчи.

   1982. AT&T объединила все версии и выпустила System III

   1983. 4.2. BSD UNIX. Поддержка работы в сетях и стек

   протоколов TCP/IP (по заказу МО США).

   1983. System V.

   1989. System V Release 4. Она объединила возможности BSD,

   SunOS, System V.

   Версии UNIX: AIX (IBM), IRIX (SGI), HPUX (Hewlett-Packard), Digital
   Unix (DEC-Compaq), Solaris и SunOs (Sun), SCO UNIX (Caldera Open
   UNIX), BSD (Net BSD, Free BSD, BSDI), Linux. Все версии основаны на
   SVR4 или BSD, или вольной смеси этих веток.

   Важнейшие стандарты, обеспечивающие целостность семейства UNIX:

   POSIX - Portable Operating System Interface

   X/OPEN - Common Application Environment (CAE), X/OPEN Portability Guid
   (XPG)

   System V Interface Definition (SVID)

   ANSI C.

                              Основные черты.

    1. Код на Си - позволяет переносить, изменять, понимать.
    2. Многозадачная многопользовательская система с широким спектром
       услуг (сервер приложений, БД, Internet, сетевой маршрутизатор,
       рабочая станция).
    3. Наличие стандартов - основой всего семейства являются
       принципиально одинаковая структура и ряд стандартных интерфейсов.
    4. Простой, но мощный модульный пользовательский интерфейс.
    5. Использование единой иерархической файловой системы. Через
       интерфейс файловой системы осуществляется доступ к данным,
       терминалам, принтерам, дискам, сети и даже к оперативной памяти.
    6. Большое количество программного обеспечения, от простейших
       редакторов до СУБД и систем распределенных вычислений.

                             Структура системы.

   Классическая архитектура UNIX двухуровневая:

    1. Ядро - управляет ресурсами компьютера и предлагает программам
       базовый набор услуг (системные вызовы).
    2. Системные программы (управление сетью, терминалами, печатью),
       прикладные программы (редакторы, утилиты, компиляторы и т.д.).

   0x08 graphic
   0x08 graphic

   0x08 graphic

   0x08 graphic
   0x08 graphic
   0x08 graphic
   0x08 graphic

   0x08 graphic

   Функции ядра:

   а) инициализация системы - загрузка и запуск ОС;

   б) управление процессами и потоками (нити, threads);

   в) управление памятью - отображение виртуального адресного
   пространства на физическую память, совместное использование процессами
   одинаковых областей памяти;

   г) управление файлами - реализует абстракцию файловой системы,
   иерархию каталогов и файлов. Современные варианты UNIX поддерживают
   одновременно большинство типов файловых систем;

   д) коммуникационные средства обеспечивает возможности обмена данными
   между процессами, выполняющимися внутри одного компьютера (IPC), между
   процессами, выполняющихся в разных узлах локальных или глобальных
   сетей передачи данных, а также между процессами и драйверами внешних
   устройств;

   е) программный интерфейс - функция, обеспечивающая доступ к
   возможностям ядра со стороны пользовательских процессов на основе
   механизма системных вызовов, оформленных в виде библиотеки функций на
   Си.

                             Системные вызовы.

   Ядро изолирует пользовательские программы от аппаратуры. Именно
   поэтому UNIX явилась первой действительно переносимой системой. Это
   связано с тем, что все части системы, не считая небольшой части ядра,
   полностью машинно-независимы и написаны на Си.

   Системные вызовы - это уровень, скрывающий особенности конкретного
   механизма выполнения на уровне аппаратуры от программ пользователя.

   0x08 graphic

                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                                0x08 graphic
                              Подсистемы ядра.

    1. Файловая подсистема. Обеспечивает унифицированный доступ к файлам:

    1. контроль прав доступа к файлу;
    2. чтение/запись файла;
    3. размещение и удаление файла;
    4. перенаправление запросов к периферийным устройствам,
       соответствующим модулям подсистемы ввода/вывода.

    2. Подсистема управления процессами.

   Запущенная на выполнение программа порождает один или несколько
   процессов (задач). Подсистема контролирует:

    1. создание и удаление процессов;
    2. распределение системных ресурсов (памяти, вычислительных ресурсов)
       между процессами;
    3. синхронизация процессов;
    4. межпроцессное взаимодействие.

   Специальная задача ядра - планировщик процессов, который

   разрешает конфликты процессов в конкуренции за ресурсы.

    3. Подсистема ввода/вывода. Выполняет запросы файловой системы и
       подсистемы управления процессами для доступа к периферийным
       устройствам (дискам, лентам, терминалам). Обеспечивает буферизацию
       данных и взаимодействует с драйверами устройств.

                     Работа в ОС UNIX для пользователя.

                               Пользователь.

   С самого начала ОС UNIX разрабатывалась как интерактивная система.
   Другими словами, UNIX предназначена для терминальной работы. Чтобы
   начать, человек должен войти в систему, введя со свободного терминала
   свое уникальное имя (account name) и, возможно, пароль (password).

   Человек, зарегистрированный в учетных записях системы и,
   следовательно, имеющий учетное имя, называется зарегистрированным
   пользователем системы.

   Регистрацию новых пользователей обычно выполняет администратор
   системы. Пользователь не может изменить свое учетное имя, но может
   установить или изменить пароль. Пароли находятся в отдельном файле в
   закодированном виде.

   Все пользователи явно или неявно работают с файлами. Файловая система
   имеет древовидную структуру. У каждого зарегистрированного
   пользователя есть домашний каталог. К нему он имеет полный доступ. К
   другим каталогам доступ обычно ограничен.

                          Интерфейс пользователя.

   Традиционный интерфейс - командная строка. После входа в систему для
   пользователя осуществляется запуск одного из командных
   интерпретаторов. Обычно в системе их несколько, и они обладают
   различными возможностями. Общее название для них - shell (оболочка),
   так как интерпретатор является внешним окружением ядра системы. На
   лабораторных занятиях используется BASH. Интерпретатор обладает мощным
   встроенным языком shell scripts, позволяющим писать сложные программы.

   1

   Рис. 1.1. Двухуровневая ОС.

                                  Процессы

                        Интерфейс системных вызовов

                            Аппаратный контроль

   Подсистема управления процессами

   Подсистема ввода/

   вывода

                            Файловая подсистема

                                 Устройства

   Пользовательский уровень

   Системный уровень

   Аппаратный уровень

   Ядро

   Рис. 1.2. Внутренняя структура ядра

Ссылки

   1. http://www.lib.ru/
   2. http://www.citforum.ru/
   3. http://www.citforum.ru/
   4. http://www.lib.ru/
